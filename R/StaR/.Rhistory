for(j in 1:length(subData[[1]]))
{
for(i in 1:length(subData))
{
# -- Vertical --
#a[[k]][[i]] <- rbind(subData[[i]][[j]][[k]], subData[[i]][[j]][[k]], subData[[i]][[j]][[k]], subData[[i]][[j]][[k]])
if(i == 1) {vData[[k]][[j]] <- subData[[i]][[j]][[k]]}
else {vData[[k]][[j]] <- rbind(vData[[k]][[j]], subData[[i]][[j]][[k]])}
}
}
}
}
}
}
subDataCombined <- list()
if(length(subData) > 0)
{
subDataCombined[[1]] <- staR_InvertDimensions(hData)
if(length(subData) > 1)
{
subDataCombined[[2]] <- staR_InvertDimensions(vData)
}
}
toc()
print("Done!")
##############################
anovas.subH <- list()
if(length(subData) >= 1)
{
tic()
for(i in 1:length(subDataCombined[[1]]))
{
if(iDesign >= 1 && iDesign <= 5)
{
print(paste("Doing - Anova ", i, "/", length(subDataCombined[[1]]), " (subData H) : ", format(STATS_DESIGNS[[iDesign]])))
if(func == 'aov') {anovas.subH[[i]] <- lapply(subDataCombined[[1]][[i]], FUN = function(x) {aov(STATS_DESIGNS[[iDesign]], x)})}
else if(func == 'ez') {anovas.subH[[i]] <- lapply(subDataCombined[[1]][[i]], FUN = function(x) {
rt_anova = ezANOVA(
data = x
, dv = values
, wid = subjects
, within = .(sessions)
#, between = groups
)}) }
}
else if(iDesign >= 11 && iDesign <= 16)
{
print(paste("Doing - Anova ", i, "/", length(subDataCombined[[1]]), " (subData H) : ", format(STATS_SUB_DESIGNS[[iDesign]][[1]])))
if(func == 'aov') {anovas.subH[[i]] <- lapply(subDataCombined[[1]][[i]], FUN = function(x) {aov(STATS_SUB_DESIGNS[[iDesign]][[1]], x)})}
else if(func == 'ez') {anovas.subH[[i]] <- lapply(subDataCombined[[1]][[i]], FUN = function(x) {
rt_anova = ezANOVA(
data = x
, dv = values
, wid = subjects
, within = .(sessions)
#, between = groups
)}) }
}
}
anovas.subV <- list()
if(length(subData) > 1)
{
for(i in 1:length(subDataCombined[[2]]))
{
#         if(iDesign >= 1 && iDesign <= 5)
#         {
#           print(paste("Doing - Anova ", i, "/", length(subDataCombined[[1]]), " (subData V) : ", format(STATS_DESIGNS[[iDesign]])))
#           anovas.subH[[i]] <- lapply(subDataCombined[[2]][[i]], FUN = function(x) {aov(STATS_DESIGNS[[iDesign]][[1]], x)})
#         }
if(iDesign >= 11 && iDesign <= 16)
{
print(paste("Doing - Anova ", i, "/", length(subDataCombined[[2]]), " (subData V) : ", format(STATS_SUB_DESIGNS[[iDesign]][[2]])))
if(func == 'aov') {anovas.subV[[i]] <- lapply(subDataCombined[[2]][[i]], FUN = function(x) {aov(STATS_SUB_DESIGNS[[iDesign]][[2]], x)})}
else if(func == 'ez') {anovas.subV[[i]] <- lapply(subDataCombined[[2]][[i]], FUN = function(x) {
rt_anova = ezANOVA(
data = x
, dv = values
, wid = subjects
#, within = .(sessions)
, between = groups
)}) }
}
}
}
toc()
}
print("Done!")
t <- list(anovas.subH, anovas.subV, anovas.full, anovas.titles.full)
print(paste("Doing - Combining (subData) : ", format(STATS_DESIGNS[[iDesign]])))
tic()
#  Combine chaque pixel nbPoints (e.g. 1536) rbind. 3 dimension, figure it out !
hData <- list()
vData <- list()
for(k in 1:nbPoints)
{
hData[[k]] <- list()
if(length(subData) > 0)
{
for(i in 1:length(subData))
{
if(length(subData[[i]]) > 0)
{
for(j in 1:length(subData[[i]]))
{
# -- Horizontal --
#a[[k]][[i]] <- rbind(subData[[i]][[j]][[k]], subData[[i]][[j]][[k]], subData[[i]][[j]][[k]], subData[[i]][[j]][[k]])
if(j == 1) {hData[[k]][[i]] <- subData[[i]][[j]][[k]]}
else {hData[[k]][[i]] <- rbind(hData[[k]][[i]], subData[[i]][[j]][[k]])}
}
}
}
if(length(subData) > 1)
{
vData[[k]] <- list()
if(length(subData[[i]]) > 1)
{
for(j in 1:length(subData[[1]]))
{
for(i in 1:length(subData))
{
# -- Vertical --
#a[[k]][[i]] <- rbind(subData[[i]][[j]][[k]], subData[[i]][[j]][[k]], subData[[i]][[j]][[k]], subData[[i]][[j]][[k]])
if(i == 1) {vData[[k]][[j]] <- subData[[i]][[j]][[k]]}
else {vData[[k]][[j]] <- rbind(vData[[k]][[j]], subData[[i]][[j]][[k]])}
}
}
}
}
}
}
subDataCombined <- list()
if(length(subData) > 0)
{
subDataCombined[[1]] <- staR_InvertDimensions(hData)
if(length(subData) > 1)
{
subDataCombined[[2]] <- staR_InvertDimensions(vData)
}
}
toc()
print("Done!")
##############################
anovas.subH <- list()
anovas.subV <- list()
if(length(subData) >= 1)
{
tic()
for(i in 1:length(subDataCombined[[1]]))
{
if(iDesign >= 1 && iDesign <= 5)
{
print(paste("Doing - Anova ", i, "/", length(subDataCombined[[1]]), " (subData H) : ", format(STATS_DESIGNS[[iDesign]])))
if(func == 'aov') {anovas.subH[[i]] <- lapply(subDataCombined[[1]][[i]], FUN = function(x) {aov(STATS_DESIGNS[[iDesign]], x)})}
else if(func == 'ez') {anovas.subH[[i]] <- lapply(subDataCombined[[1]][[i]], FUN = function(x) {
rt_anova = ezANOVA(
data = x
, dv = values
, wid = subjects
, within = .(sessions)
#, between = groups
)}) }
}
else if(iDesign >= 11 && iDesign <= 16)
{
print(paste("Doing - Anova ", i, "/", length(subDataCombined[[1]]), " (subData H) : ", format(STATS_SUB_DESIGNS[[iDesign]][[1]])))
if(func == 'aov') {anovas.subH[[i]] <- lapply(subDataCombined[[1]][[i]], FUN = function(x) {aov(STATS_SUB_DESIGNS[[iDesign]][[1]], x)})}
else if(func == 'ez') {anovas.subH[[i]] <- lapply(subDataCombined[[1]][[i]], FUN = function(x) {
rt_anova = ezANOVA(
data = x
, dv = values
, wid = subjects
, within = .(sessions)
#, between = groups
)}) }
}
}
if(length(subData) > 1)
{
for(i in 1:length(subDataCombined[[2]]))
{
#         if(iDesign >= 1 && iDesign <= 5)
#         {
#           print(paste("Doing - Anova ", i, "/", length(subDataCombined[[1]]), " (subData V) : ", format(STATS_DESIGNS[[iDesign]])))
#           anovas.subH[[i]] <- lapply(subDataCombined[[2]][[i]], FUN = function(x) {aov(STATS_DESIGNS[[iDesign]][[1]], x)})
#         }
if(iDesign >= 11 && iDesign <= 16)
{
print(paste("Doing - Anova ", i, "/", length(subDataCombined[[2]]), " (subData V) : ", format(STATS_SUB_DESIGNS[[iDesign]][[2]])))
if(func == 'aov') {anovas.subV[[i]] <- lapply(subDataCombined[[2]][[i]], FUN = function(x) {aov(STATS_SUB_DESIGNS[[iDesign]][[2]], x)})}
else if(func == 'ez') {anovas.subV[[i]] <- lapply(subDataCombined[[2]][[i]], FUN = function(x) {
rt_anova = ezANOVA(
data = x
, dv = values
, wid = subjects
#, within = .(sessions)
, between = groups
)}) }
}
}
}
toc()
}
print("Done!")
t <- list(anovas.subH, anovas.subV, anovas.full, anovas.titles.full)
anovas.full <- list()
anovas.titles.full = "NA"
print(paste("Doing - Combining (subData) : ", format(STATS_DESIGNS[[iDesign]])))
tic()
#  Combine chaque pixel nbPoints (e.g. 1536) rbind. 3 dimension, figure it out !
hData <- list()
vData <- list()
for(k in 1:nbPoints)
{
hData[[k]] <- list()
if(length(subData) > 0)
{
for(i in 1:length(subData))
{
if(length(subData[[i]]) > 0)
{
for(j in 1:length(subData[[i]]))
{
# -- Horizontal --
#a[[k]][[i]] <- rbind(subData[[i]][[j]][[k]], subData[[i]][[j]][[k]], subData[[i]][[j]][[k]], subData[[i]][[j]][[k]])
if(j == 1) {hData[[k]][[i]] <- subData[[i]][[j]][[k]]}
else {hData[[k]][[i]] <- rbind(hData[[k]][[i]], subData[[i]][[j]][[k]])}
}
}
}
if(length(subData) > 1)
{
vData[[k]] <- list()
if(length(subData[[i]]) > 1)
{
for(j in 1:length(subData[[1]]))
{
for(i in 1:length(subData))
{
# -- Vertical --
#a[[k]][[i]] <- rbind(subData[[i]][[j]][[k]], subData[[i]][[j]][[k]], subData[[i]][[j]][[k]], subData[[i]][[j]][[k]])
if(i == 1) {vData[[k]][[j]] <- subData[[i]][[j]][[k]]}
else {vData[[k]][[j]] <- rbind(vData[[k]][[j]], subData[[i]][[j]][[k]])}
}
}
}
}
}
}
subDataCombined <- list()
if(length(subData) > 0)
{
subDataCombined[[1]] <- staR_InvertDimensions(hData)
if(length(subData) > 1)
{
subDataCombined[[2]] <- staR_InvertDimensions(vData)
}
}
toc()
print("Done!")
##############################
anovas.subH <- list()
anovas.subV <- list()
if(length(subData) >= 1)
{
tic()
for(i in 1:length(subDataCombined[[1]]))
{
if(iDesign >= 1 && iDesign <= 5)
{
print(paste("Doing - Anova ", i, "/", length(subDataCombined[[1]]), " (subData H) : ", format(STATS_DESIGNS[[iDesign]])))
if(func == 'aov') {anovas.subH[[i]] <- lapply(subDataCombined[[1]][[i]], FUN = function(x) {aov(STATS_DESIGNS[[iDesign]], x)})}
else if(func == 'ez') {anovas.subH[[i]] <- lapply(subDataCombined[[1]][[i]], FUN = function(x) {
rt_anova = ezANOVA(
data = x
, dv = values
, wid = subjects
, within = .(sessions)
#, between = groups
)}) }
}
else if(iDesign >= 11 && iDesign <= 16)
{
print(paste("Doing - Anova ", i, "/", length(subDataCombined[[1]]), " (subData H) : ", format(STATS_SUB_DESIGNS[[iDesign]][[1]])))
if(func == 'aov') {anovas.subH[[i]] <- lapply(subDataCombined[[1]][[i]], FUN = function(x) {aov(STATS_SUB_DESIGNS[[iDesign]][[1]], x)})}
else if(func == 'ez') {anovas.subH[[i]] <- lapply(subDataCombined[[1]][[i]], FUN = function(x) {
rt_anova = ezANOVA(
data = x
, dv = values
, wid = subjects
, within = .(sessions)
#, between = groups
)}) }
}
}
if(length(subData) > 1)
{
for(i in 1:length(subDataCombined[[2]]))
{
#         if(iDesign >= 1 && iDesign <= 5)
#         {
#           print(paste("Doing - Anova ", i, "/", length(subDataCombined[[1]]), " (subData V) : ", format(STATS_DESIGNS[[iDesign]])))
#           anovas.subH[[i]] <- lapply(subDataCombined[[2]][[i]], FUN = function(x) {aov(STATS_DESIGNS[[iDesign]][[1]], x)})
#         }
if(iDesign >= 11 && iDesign <= 16)
{
print(paste("Doing - Anova ", i, "/", length(subDataCombined[[2]]), " (subData V) : ", format(STATS_SUB_DESIGNS[[iDesign]][[2]])))
if(func == 'aov') {anovas.subV[[i]] <- lapply(subDataCombined[[2]][[i]], FUN = function(x) {aov(STATS_SUB_DESIGNS[[iDesign]][[2]], x)})}
else if(func == 'ez') {anovas.subV[[i]] <- lapply(subDataCombined[[2]][[i]], FUN = function(x) {
rt_anova = ezANOVA(
data = x
, dv = values
, wid = subjects
#, within = .(sessions)
, between = groups
)}) }
}
}
}
toc()
}
print("Done!")
t <- list(anovas.subH, anovas.subV, anovas.full, anovas.titles.full)
source("StaR_Designs.R")
source("StaR_LoadData.R")
source("StaR_MixedModels.R")
source("StaR_Anovas.R")
source("StaR_PlotStats.R")
AnovaFunc = 'ez'
# anovas.all = 3D; H | V | Full
anovas.result <- staR_Anova(fullData = fullData, subData = subDataset, iDesign = iDesign, nbPoints, func = AnovaFunc)
anovas.all <- anovas.result[1:3]
hTitles[[3]] <- anovas.result[[4]]
anovas.summaries <- staR_Summary(anovas.all, iDesign, func = AnovaFunc)
#anovas.all <- NULL # Free memory.
# -- pVals --
anovas.ps <- staR_PVals(anovas.summaries, iDesign, 0.05, func = AnovaFunc)
anovas.pVals <- anovas.ps[[1]]
anovas.pSignificants <- anovas.ps[[2]]
# -- Plot Stats --
plot(unlist(anovas.pVals[[1]][[1]]), type="l")
if(bERP) { hStats <- plotStats(anovas.pSignificants, timeData) }
if(bERSP) { hStats <- plotStats_ERSP(anovas.pSignificants, timeData) }
hStats
length(anovas.all)
length(anovas.all[[1]])
length(anovas.all[[2]])
length(anovas.result[1:3][[1]])
anovas.result <- staR_Anova(fullData = fullData, subData = NULL, iDesign = iDesign, nbPoints, func = AnovaFunc)
anovas.all <- anovas.result[1:3]
hTitles[[3]] <- anovas.result[[4]]
anovas.summaries <- staR_Summary(anovas.all, iDesign, func = AnovaFunc)
#anovas.all <- NULL # Free memory.
# -- pVals --
anovas.ps <- staR_PVals(anovas.summaries, iDesign, 0.05, func = AnovaFunc)
anovas.pVals <- anovas.ps[[1]]
anovas.pSignificants <- anovas.ps[[2]]
# -- Plot Stats --
plot(unlist(anovas.pVals[[1]][[1]]), type="l")
if(bERP) { hStats <- plotStats(anovas.pSignificants, timeData) }
if(bERSP) { hStats <- plotStats_ERSP(anovas.pSignificants, timeData) }
# -- pVals Correction --
hStats
lenght(anovas.all[[1]])
length(anovas.all[[1]])
length(anovas.all[[2]])
length(anovas.all[[3]])
anovas.all
anovas.all[[1]]
anovas.summaries <- staR_Summary(anovas.all, iDesign, func = AnovaFunc)
length(anovas.summaries[[1]])
anovas.ps <- staR_PVals(anovas.summaries, iDesign, 0.05, func = AnovaFunc)
source("StaR_Designs.R")
source("StaR_LoadData.R")
source("StaR_MixedModels.R")
source("StaR_Anovas.R")
source("StaR_PlotStats.R")
# -- pVals --
anovas.ps <- staR_PVals(anovas.summaries, iDesign, 0.05, func = AnovaFunc)
anovas.pVals <- anovas.ps[[1]]
anovas.pSignificants <- anovas.ps[[2]]
summaries <- anovas.summaries
sigthreshold = 0.05
func <- AnovaFunc
anovas.pVals <- list()
#  if(bAll == TRUE)
print(paste("Doing - PVals : ", format(STATS_DESIGNS[[iDesign]])))
tic()
if(iDesign >= 1 && iDesign <= 5)
{
anovas.pVals[[1]] <- list()
if(func == 'aov') {anovas.pVals[[1]][[1]] <- lapply(summaries[[1]][[1]], FUN = function(x) {x[[1]]$'Pr(>F)'[[1]]})}
else if(func == 'ez') {anovas.pVals[[1]][[1]] <- lapply(summaries[[1]][[1]], FUN = function(x) {x$ANOVA$p[[1]]})}
}
if(iDesign >= 11 && iDesign <= 16)
{
# subH
anovas.pVals[[1]] <- list()
if(length(summaries[[1]]) > 0)
{
for(i in 1:length(summaries[[1]]))
{
print(paste("Doing - PVals (Horizontal) : ", i, "/", length(summaries[[1]])))
if(func == 'aov') {anovas.pVals[[1]][[i]] <- lapply(summaries[[1]][[i]], FUN = function(x) {x[[1]]$'Pr(>F)'[[1]]})}
else if(func == 'ez') {anovas.pVals[[1]][[i]] <- lapply(summaries[[1]][[i]], FUN = function(x) {x$ANOVA$p[[1]]})}
}
}
}
# subV
anovas.pVals[[2]] <- list()
if(length(summaries[[2]]) > 0)
{
for(i in 1:length(summaries[[2]]))
{
print(paste("Doing - PVals (Vertical) : ", i, "/", length(summaries[[2]])))
if(func == 'aov') {anovas.pVals[[2]][[i]] <- lapply(summaries[[2]][[i]], FUN = function(x) {x[[1]]$'Pr(>F)'[[1]]})}
else if(func == 'ez') {anovas.pVals[[2]][[1]] <- lapply(summaries[[2]][[i]], FUN = function(x) {x$ANOVA$p[[1]]})}
}
}
# Full
print(paste("Doing - PVals (Full)"))
anovas.pVals[[3]] <- list()
if(func == 'aov') {anovas.pVals[[3]][[1]] <- lapply(summaries[[3]][[1]], FUN = function(x) {x[[1]]$'Pr(>F)'[[1]]})}
else if(func == 'ez') {anovas.pVals[[3]][[1]] <- lapply(summaries[[3]], FUN = function(x) {x$ANOVA$p[[1]]})}
if(func == 'aov') {anovas.pVals[[3]][[2]] <- lapply(summaries[[3]][[1]], FUN = function(x) {x[[1]]$'Pr(>F)'[[2]]})}
else if(func == 'ez') {anovas.pVals[[3]][[2]] <- lapply(summaries[[3]], FUN = function(x) {x$ANOVA$p[[2]]})}
if(func == 'aov') {anovas.pVals[[3]][[3]] <- lapply(summaries[[3]][[1]], FUN = function(x) {x[[1]]$'Pr(>F)'[[3]]})}
else if(func == 'ez') {anovas.pVals[[3]][[3]] <- lapply(summaries[[3]], FUN = function(x) {x$ANOVA$p[[3]]})}
if(func == 'aov') {print("sup")} else if(func == 'ez') {print('nope')}
print(paste("Doing - PVals (Full)"))
anovas.pVals[[3]] <- list()
if(func == 'aov') {anovas.pVals[[3]][[1]] <- lapply(summaries[[3]][[1]], FUN = function(x) {x[[1]]$'Pr(>F)'[[1]]})}
else if(func == 'ez') {anovas.pVals[[3]][[1]] <- lapply(summaries[[3]], FUN = function(x) {x$ANOVA$p[[1]]})}
if(func == 'aov') {anovas.pVals[[3]][[2]] <- lapply(summaries[[3]][[1]], FUN = function(x) {x[[1]]$'Pr(>F)'[[2]]})}
else if(func == 'ez') {anovas.pVals[[3]][[2]] <- lapply(summaries[[3]], FUN = function(x) {x$ANOVA$p[[2]]})}
if(func == 'aov') {anovas.pVals[[3]][[3]] <- lapply(summaries[[3]][[1]], FUN = function(x) {x[[1]]$'Pr(>F)'[[3]]})}
else if(func == 'ez') {anovas.pVals[[3]][[3]] <- lapply(summaries[[3]], FUN = function(x) {x$ANOVA$p[[3]]})}
if(func == 'aov') {anovas.pVals[[3]][[1]] <- lapply(summaries[[3]][[1]], FUN = function(x) {x[[1]]$'Pr(>F)'[[1]]})}
else if(func == 'ez') {anovas.pVals[[3]][[1]] <- lapply(summaries[[3]], FUN = function(x) {x$ANOVA$p[[1]]})}
print(paste("Doing - PVals (Full)"))
anovas.pVals[[3]] <- list()
if(func == 'aov') {anovas.pVals[[3]][[1]] <- lapply(summaries[[3]][[1]], FUN = function(x) {x[[1]]$'Pr(>F)'[[1]]})}
else if(func == 'ez') {anovas.pVals[[3]][[1]] <- lapply(summaries[[3]], FUN = function(x) {x$ANOVA$p[[1]]})}
else {print("No Valid Func")}
}
if(func == 'aov') {anovas.pVals[[3]][[1]] <- lapply(summaries[[3]][[1]], FUN = function(x) {x[[1]]$'Pr(>F)'[[1]]})}
else if(func == 'ez') {anovas.pVals[[3]][[1]] <- lapply(summaries[[3]], FUN = function(x) {x$ANOVA$p[[1]]})}
print(paste("Doing - PVals (Full)"))
anovas.pVals[[3]] <- list()
if(func == 'aov') {anovas.pVals[[3]][[1]] <- lapply(summaries[[3]][[1]], FUN = function(x) {x[[1]]$'Pr(>F)'[[1]]})}
if(func == 'ez') {anovas.pVals[[3]][[1]] <- lapply(summaries[[3]], FUN = function(x) {x$ANOVA$p[[1]]})}
if(func == 'aov') {anovas.pVals[[3]][[2]] <- lapply(summaries[[3]][[1]], FUN = function(x) {x[[1]]$'Pr(>F)'[[2]]})}
if(func == 'ez') {anovas.pVals[[3]][[2]] <- lapply(summaries[[3]], FUN = function(x) {x$ANOVA$p[[2]]})}
if(func == 'aov') {anovas.pVals[[3]][[3]] <- lapply(summaries[[3]][[1]], FUN = function(x) {x[[1]]$'Pr(>F)'[[3]]})}
if(func == 'ez') {anovas.pVals[[3]][[3]] <- lapply(summaries[[3]], FUN = function(x) {x$ANOVA$p[[3]]})}
print(paste("Doing - PSignif."))
anovas.pSignif <- anovas.pVals
for(i in 1:length(anovas.pSignif))
{
print(paste(length(anovas.pSignif), i))
for(j in 1:length(anovas.pSignif[[i]]))
{
anovas.pSignif[[i]][[j]][anovas.pSignif[[i]][[j]] < sigthreshold] <- 0 #'Signif.'
anovas.pSignif[[i]][[j]][anovas.pSignif[[i]][[j]] >= sigthreshold] <- 1 #'Non Signif.'
}
}
anovas.pSignif <- anovas.pVals
anovas.pSignif
length(anovas.pSignif)
length(anovas.pSignif[[1]])
length(anovas.pSignif[[2]])
length(anovas.pSignif[[3]])
anovas.pSignif <- anovas.pVals
for(i in 1:length(anovas.pSignif))
{
print(paste(length(anovas.pSignif), i))
if(length(anovas.pSignif[[i]]) > 0)
{
for(j in 1:length(anovas.pSignif[[i]]))
{
anovas.pSignif[[i]][[j]][anovas.pSignif[[i]][[j]] < sigthreshold] <- 0 #'Signif.'
anovas.pSignif[[i]][[j]][anovas.pSignif[[i]][[j]] >= sigthreshold] <- 1 #'Non Signif.'
}
}
}
source("StaR_Designs.R")
source("StaR_LoadData.R")
source("StaR_MixedModels.R")
source("StaR_Anovas.R")
source("StaR_PlotStats.R")
# -- pVals --
anovas.ps <- staR_PVals(anovas.summaries, iDesign, 0.05, func = AnovaFunc)
anovas.pVals <- anovas.ps[[1]]
anovas.pSignificants <- anovas.ps[[2]]
# -- Plot Stats --
plot(unlist(anovas.pVals[[1]][[1]]), type="l")
if(bERP) { hStats <- plotStats(anovas.pSignificants, timeData) }
if(bERSP) { hStats <- plotStats_ERSP(anovas.pSignificants, timeData) }
anovas.ps <- staR_PVals(anovas.summaries, iDesign, 0.05, func = AnovaFunc)
anovas.pVals <- anovas.ps[[1]]
anovas.pSignificants <- anovas.ps[[2]]
if(bERP) { hStats <- plotStats(anovas.pSignificants, timeData) }
source("StaR_Designs.R")
source("StaR_LoadData.R")
source("StaR_MixedModels.R")
source("StaR_Anovas.R")
source("StaR_PlotStats.R")
anovas.ps <- staR_PVals(anovas.summaries, iDesign, 0.05, func = AnovaFunc)
anovas.pVals <- anovas.ps[[1]]
anovas.pSignificants <- anovas.ps[[2]]
if(bERP) { hStats <- plotStats(anovas.pSignificants, timeData) }
if(bERSP) { hStats <- plotStats_ERSP(anovas.pSignificants, timeData) }
hStats
